
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using System.Collections.Generic;

namespace ET
{
    /// <summary>
    /// 建筑表
    /// </summary>
    [Config]
    public partial class TbBuilding : Singleton<TbBuilding>, IConfig
    {
        private readonly List<TbBuildingRow> _dataList;

        private Dictionary<(int, int), TbBuildingRow> _dataMapUnion;

        public TbBuilding(ByteBuf _buf)
        {
            _dataList = new List<TbBuildingRow>();

            for(int n = _buf.ReadSize() ; n > 0 ; --n)
            {
                TbBuildingRow _v;
                _v = TbBuildingRow.DeserializeTbBuildingRow(_buf);
                _dataList.Add(_v);
            }
            _dataMapUnion = new Dictionary<(int, int), TbBuildingRow>();
            foreach(var _v in _dataList)
            {
                _dataMapUnion.Add((_v.Id, _v.Level), _v);
            }
        }

        public List<TbBuildingRow> DataList => _dataList;

        public TbBuildingRow GetOrDefault(int Id, int level)
        {
            return _dataMapUnion.GetValueOrDefault((Id, level));
        }
    
        public TbBuildingRow Get(int Id, int level)
        {
            if (_dataMapUnion.TryGetValue((Id, level), out var v))
            {
                return v;
            }
            ConfigLog.Error(this, (Id, level));
            return null;
        }

        public void ResolveRef()
        {
            foreach(var _v in _dataList)
            {
                _v.ResolveRef();
            }
        }

        partial void PostInit();
    }
}
