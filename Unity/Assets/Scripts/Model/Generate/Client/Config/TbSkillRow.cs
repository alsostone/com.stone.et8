
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;

namespace ET
{
    [EnableClass]
    public sealed partial class TbSkillRow : BeanBase
    {
        public TbSkillRow(ByteBuf _buf)
        {
            Id = _buf.ReadInt();
            LevelLimit = _buf.ReadInt();
            FirstCdTime = _buf.ReadInt();
            CdTime = _buf.ReadInt();
            Probability = _buf.ReadInt();
            SkillType = (ESkillType)_buf.ReadInt();
            ConsumeType = (EConsumeType)_buf.ReadInt();
            {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ConsumeParam = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); ConsumeParam[__index0] = __e0;}}
            EffectId = _buf.ReadInt();
            AniNamePre = _buf.ReadString();
            AniName = _buf.ReadString();
            AniNameAfter = _buf.ReadString();
            DurationPre = _buf.ReadInt();
            Duration = _buf.ReadInt();
            DurationAfter = _buf.ReadInt();
            {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);TriggerArray = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); TriggerArray[__index0] = __e0;}}
            EffectGroupId = _buf.ReadInt();
            ReleaseConditionType = (EGroupCompletedType)_buf.ReadInt();
            {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ConditionIdArray = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); ConditionIdArray[__index0] = __e0;}}
            SearchRealTime = _buf.ReadBool();
            SearchTarget = _buf.ReadInt();
            SearchTarget_Ref = null;

            PostInit();
        }

        public static TbSkillRow DeserializeTbSkillRow(ByteBuf _buf)
        {
            return new TbSkillRow(_buf);
        }

        /// <summary>
        /// ID
        /// </summary>
        public readonly int Id;

        /// <summary>
        /// 解锁等级
        /// </summary>
        public readonly int LevelLimit;

        /// <summary>
        /// 初始冷却时间
        /// </summary>
        public readonly int FirstCdTime;

        /// <summary>
        /// 冷却时间
        /// </summary>
        public readonly int CdTime;

        /// <summary>
        /// 触发概率
        /// </summary>
        public readonly int Probability;

        /// <summary>
        /// 技能类型
        /// </summary>
        public readonly ESkillType SkillType;

        /// <summary>
        /// 消耗类型
        /// </summary>
        public readonly EConsumeType ConsumeType;

        /// <summary>
        /// 消耗参数
        /// </summary>
        public readonly int[] ConsumeParam;

        /// <summary>
        /// 特效ID
        /// </summary>
        public readonly int EffectId;

        /// <summary>
        /// 前摇动作
        /// </summary>
        public readonly string AniNamePre;

        /// <summary>
        /// 持续动作
        /// </summary>
        public readonly string AniName;

        /// <summary>
        /// 后摇动作
        /// </summary>
        public readonly string AniNameAfter;

        /// <summary>
        /// 前摇时间
        /// </summary>
        public readonly int DurationPre;

        /// <summary>
        /// 持续时间
        /// </summary>
        public readonly int Duration;

        /// <summary>
        /// 后摇时间
        /// </summary>
        public readonly int DurationAfter;

        /// <summary>
        /// 效果触发点
        /// </summary>
        public readonly int[] TriggerArray;

        /// <summary>
        /// 效果组ID
        /// </summary>
        public readonly int EffectGroupId;

        /// <summary>
        /// 释放条件类型
        /// </summary>
        public readonly EGroupCompletedType ReleaseConditionType;

        /// <summary>
        /// 释放条件
        /// </summary>
        public readonly int[] ConditionIdArray;

        /// <summary>
        /// 实时搜索目标
        /// </summary>
        public readonly bool SearchRealTime;

        /// <summary>
        /// 目标搜索
        /// </summary>
        public readonly int SearchTarget;

        public TbSearchRow SearchTarget_Ref { get; private set; }


        public const int __ID__ = 1842940535;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef()
        {
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            SearchTarget_Ref = TbSearch.Instance.GetOrDefault(SearchTarget);
        }

        public override string ToString()
        {
            return "{ "
            + "Id:" + Id + ","
            + "levelLimit:" + LevelLimit + ","
            + "firstCdTime:" + FirstCdTime + ","
            + "cdTime:" + CdTime + ","
            + "probability:" + Probability + ","
            + "skillType:" + SkillType + ","
            + "consumeType:" + ConsumeType + ","
            + "consumeParam:" + Luban.StringUtil.CollectionToString(ConsumeParam) + ","
            + "effectId:" + EffectId + ","
            + "aniNamePre:" + AniNamePre + ","
            + "aniName:" + AniName + ","
            + "aniNameAfter:" + AniNameAfter + ","
            + "durationPre:" + DurationPre + ","
            + "duration:" + Duration + ","
            + "durationAfter:" + DurationAfter + ","
            + "triggerArray:" + Luban.StringUtil.CollectionToString(TriggerArray) + ","
            + "effectGroupId:" + EffectGroupId + ","
            + "releaseConditionType:" + ReleaseConditionType + ","
            + "conditionIdArray:" + Luban.StringUtil.CollectionToString(ConditionIdArray) + ","
            + "searchRealTime:" + SearchRealTime + ","
            + "searchTarget:" + SearchTarget + ","
            + "}";
        }

        partial void PostInit();
    }
}
