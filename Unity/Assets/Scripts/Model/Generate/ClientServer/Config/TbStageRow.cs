
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;

namespace ET
{
    [EnableClass]
    public sealed partial class TbStageRow : BeanBase
    {
        public TbStageRow(ByteBuf _buf)
        {
            Id = _buf.ReadInt();
            Name = _buf.ReadString();
            FightMode = (FightMode)_buf.ReadInt();
            SceneName = _buf.ReadString();
            BaseCampTower = _buf.ReadInt();
            BaseCampTower_Ref = null;
            BaseCampSoldier = _buf.ReadInt();
            BaseCampSoldier_Ref = null;
            Count = _buf.ReadInt();
            Delay = _buf.ReadInt();
            WaveInterval = _buf.ReadInt();
            RandomInterval = _buf.ReadInt();
            {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);RandomCounts = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); RandomCounts[__index0] = __e0;}}
            {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);RandomSets = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); RandomSets[__index0] = __e0;}}

            PostInit();
        }

        public static TbStageRow DeserializeTbStageRow(ByteBuf _buf)
        {
            return new TbStageRow(_buf);
        }

        /// <summary>
        /// ID
        /// </summary>
        public readonly int Id;

        /// <summary>
        /// 关卡名称
        /// </summary>
        public readonly string Name;

        /// <summary>
        /// 战斗模式
        /// </summary>
        public readonly FightMode FightMode;

        /// <summary>
        /// 地图名称
        /// </summary>
        public readonly string SceneName;

        /// <summary>
        /// 塔防大本营
        /// </summary>
        public readonly int BaseCampTower;

        public TbBuildingRow BaseCampTower_Ref { get; private set; }

        /// <summary>
        /// 兵防大本营
        /// </summary>
        public readonly int BaseCampSoldier;

        public TbBuildingRow BaseCampSoldier_Ref { get; private set; }

        /// <summary>
        /// 波次数量
        /// </summary>
        public readonly int Count;

        /// <summary>
        /// 首波时间
        /// </summary>
        public readonly int Delay;

        /// <summary>
        /// 波次间隔
        /// </summary>
        public readonly int WaveInterval;

        /// <summary>
        /// 波内刷怪间隔
        /// </summary>
        public readonly int RandomInterval;

        /// <summary>
        /// 每波刷怪数量
        /// </summary>
        public readonly int[] RandomCounts;

        /// <summary>
        /// 每波刷怪掉落集
        /// </summary>
        public readonly int[] RandomSets;


        public const int __ID__ = 1006679722;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef()
        {
            
            
            
            
            BaseCampTower_Ref = TbBuilding.Instance.GetOrDefault(BaseCampTower);
            BaseCampSoldier_Ref = TbBuilding.Instance.GetOrDefault(BaseCampSoldier);
            
            
            
            
            
            
        }

        public override string ToString()
        {
            return "{ "
            + "Id:" + Id + ","
            + "name:" + Name + ","
            + "fightMode:" + FightMode + ","
            + "sceneName:" + SceneName + ","
            + "baseCampTower:" + BaseCampTower + ","
            + "baseCampSoldier:" + BaseCampSoldier + ","
            + "count:" + Count + ","
            + "delay:" + Delay + ","
            + "waveInterval:" + WaveInterval + ","
            + "randomInterval:" + RandomInterval + ","
            + "randomCounts:" + Luban.StringUtil.CollectionToString(RandomCounts) + ","
            + "randomSets:" + Luban.StringUtil.CollectionToString(RandomSets) + ","
            + "}";
        }

        partial void PostInit();
    }
}
