
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;

namespace ET
{
    [EnableClass]
    public sealed partial class TbRandomBagRow : BeanBase
    {
        public TbRandomBagRow(ByteBuf _buf)
        {
            Id = _buf.ReadInt();
            IsRandomOne = _buf.ReadBool();
            {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Items = new ItemRandomBag[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { ItemRandomBag __e0;__e0 = ItemRandomBag.DeserializeItemRandomBag(_buf); Items[__index0] = __e0;}}

            PostInit();
        }

        public static TbRandomBagRow DeserializeTbRandomBagRow(ByteBuf _buf)
        {
            return new TbRandomBagRow(_buf);
        }

        /// <summary>
        /// ID
        /// </summary>
        public readonly int Id;

        /// <summary>
        /// 是否单个包
        /// </summary>
        public readonly bool IsRandomOne;

        public readonly ItemRandomBag[] Items;


        public const int __ID__ = 899142915;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef()
        {
            
            
            foreach (var _e in Items) { _e?.ResolveRef(); }
        }

        public override string ToString()
        {
            return "{ "
            + "Id:" + Id + ","
            + "isRandomOne:" + IsRandomOne + ","
            + "items:" + Luban.StringUtil.CollectionToString(Items) + ","
            + "}";
        }

        partial void PostInit();
    }
}
